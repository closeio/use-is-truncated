{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import { useRef, useState, useLayoutEffect } from 'react';\n\n/**\n * Return whether an element is truncated (by overflow:hidden)\n * @returns {[ref: React.MutableRefObject, isTruncated: boolean]}\n */\nexport default function useIsTruncated(content) {\n  const ref = useRef();\n  const [isTruncated, setIsTruncated] = useState(false);\n\n  useLayoutEffect(() => {\n    const el = ref.current;\n    setIsTruncated(Boolean(el) && el.scrollWidth > el.clientWidth);\n  }, [content]);\n\n  return [ref, isTruncated];\n}\n"],"names":["useIsTruncated","content","ref","useRef","useState","isTruncated","setIsTruncated","useLayoutEffect","el","current","Boolean","scrollWidth","clientWidth"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;AAIe,SAASA,cAAT,CAAwBC,OAAxB,EAAiC;AAC9C,MAAMC,GAAG,GAAGC,YAAM,EAAlB;;AAD8C,kBAERC,cAAQ,CAAC,KAAD,CAFA;AAAA;AAAA,MAEvCC,WAFuC;AAAA,MAE1BC,cAF0B;;AAI9CC,EAAAA,qBAAe,CAAC,YAAM;AACpB,QAAMC,EAAE,GAAGN,GAAG,CAACO,OAAf;AACAH,IAAAA,cAAc,CAACI,OAAO,CAACF,EAAD,CAAP,IAAeA,EAAE,CAACG,WAAH,GAAiBH,EAAE,CAACI,WAApC,CAAd;AACD,GAHc,EAGZ,CAACX,OAAD,CAHY,CAAf;AAKA,SAAO,CAACC,GAAD,EAAMG,WAAN,CAAP;AACD;;;;"}